package  {			import org.flintparticles.common.actions.*;		import org.flintparticles.common.counters.*;		import org.flintparticles.common.displayObjects.RadialDot;		import org.flintparticles.common.initializers.*;		import org.flintparticles.twoD.actions.*;		import org.flintparticles.twoD.emitters.Emitter2D;		import org.flintparticles.twoD.initializers.*;		import org.flintparticles.twoD.renderers.*;		import org.flintparticles.twoD.zones.*;		import flash.display.Sprite;		import flash.display.Sprite;  		import flash.filters.BlurFilter;  		import flash.filters.ColorMatrixFilter;  		import flash.geom.Rectangle;		import flash.geom.Point;		public class bodyCursor extends Sprite {		public function bodyCursor(userNumber) {												this.alpha = 0.3;			var smoke:Emitter2D = new Emitter2D();			smoke.counter = new Random(3,10 );						smoke.addInitializer( new Lifetime( 11, 12 ) );			smoke.addInitializer( new Velocity( new DiscSectorZone( new Point( 0, 0 ), 40, 30, -4 * Math.PI / 7, -3 * Math.PI / 7 ) ) );			smoke.addInitializer( new SharedImage( new RadialDot( 7 ) ) );			  			smoke.addAction( new Age( ) );			smoke.addAction( new Move( ) );			smoke.addAction( new LinearDrag( 0.2 ) );			smoke.addAction( new ScaleImage( 10, 20 ) );			smoke.addAction( new Fade( 0.35, 0 ) );			smoke.addAction( new RandomDrift( 20, 20 ) );			if(userNumber == 0){				smoke.addAction( new ColorChange(0xFF0000FF, 0xFF0000FF) );			}			else if (userNumber == 1){				smoke.addAction( new ColorChange(0xFF00FF00, 0xFF00FF00) );			}			else if (userNumber == 3){				smoke.addAction( new ColorChange(0xFFFF0000, 0xFFFF0000) );			}			else if (userNumber == 4){				smoke.addAction( new ColorChange(0xFFFABB00, 0xFFFABB00) );			}									smoke.x = 0;			smoke.y = 0;			smoke.start( );						var renderer:BitmapRenderer = new BitmapRenderer( new Rectangle( -400, -400, 800, 800 ) );			//renderer.addEmitter( fire );			renderer.addEmitter( smoke );			addChild( renderer );		}				public function randomRange(minNum:Number, maxNum:Number):Number {			return (Math.floor(Math.random()*(maxNum - minNum +1)) + minNum);		}	}	}