package  {			import org.flintparticles.common.actions.*;		import org.flintparticles.common.counters.*;		import org.flintparticles.common.displayObjects.Line;		import org.flintparticles.common.displayObjects.Dot;		import org.flintparticles.common.initializers.*;		import org.flintparticles.twoD.actions.*;		import org.flintparticles.twoD.activities.FollowMouse;		import org.flintparticles.twoD.emitters.Emitter2D;		import org.flintparticles.twoD.initializers.*;		import org.flintparticles.twoD.renderers.*;		import org.flintparticles.twoD.zones.*; 		import flash.display.Sprite;		import flash.display.Sprite;  		import flash.filters.BlurFilter;  		import flash.filters.ColorMatrixFilter;  		import flash.geom.Rectangle;		import flash.geom.Point;		public class handCursor extends Sprite {		public function handCursor() {						this.alpha = 0.9;			var emitter:Emitter2D = new Emitter2D();			emitter.counter = new Steady( 150 );						emitter.addInitializer( new SharedImage( new Dot( randomRange(50, 400)/100 ) ) );			emitter.addInitializer( new ColorInit( 0xFFFFCC00, 0xFFFFCC00 ) );			emitter.addInitializer( new Velocity( new DiscZone( new Point( 0, 0 ), 350, 50 ) ) );			emitter.addInitializer( new Lifetime( 0.2, 0.4 ) );						emitter.addAction( new Age() );			emitter.addAction( new Move() );			emitter.addAction( new RotateToDirection() );			emitter.addAction( new GravityWell(100, 50, 50, 100) );						var renderer:BitmapRenderer = new BitmapRenderer( new Rectangle( 0, 0, 400, 400 ) );			renderer.addFilter( new BlurFilter( 2, 2, 1 ) );			renderer.addFilter( new ColorMatrixFilter( [ 1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0.95,0 ] ) );			renderer.addEmitter( emitter );			addChild( renderer );						emitter.x = 100; 			emitter.y = 100;						//emitter.addActivity( new FollowMouse( renderer ) );						emitter.start( );		}				public function randomRange(minNum:Number, maxNum:Number):Number {			return (Math.floor(Math.random()*(maxNum - minNum +1)) + minNum);		}	}	}