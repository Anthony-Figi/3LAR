package  {		import flash.display.MovieClip;	import com.caurina.transitions.Tweener;	import flash.events.*;			public class bug extends MovieClip {				public var DC;		public var Bi;				public function bug(DC, Bi) {			this.DC = DC;			this.Bi = Bi;			this.x = randomRange(0, 1200);			this.y = randomRange(0, 1000);			this.alpha = 0;			this.addEventListener(Event.ENTER_FRAME, hover);			this.addEventListener(Event.ENTER_FRAME, killBug);			Tweener.addTween(this, {				 alpha:1,				 time:randomRange(0, 300)/100				 });		}				public function randomRange(minNum:Number, maxNum:Number):Number {			return (Math.floor(Math.random()*(maxNum - minNum +1)) + minNum);		}				public function killBug (event: Event) { 		if(this.DC.userOne != null){				for each(var user in this.DC.device.users) {					if(this.DC.gameOn != true){						var userOneLeftHand = this.DC.leftSprites[user.userID]						var userOneRightHand = this.DC.rightSprites[user.userID]						if(userOneLeftHand != null && userOneRightHand != null){							if(this.hitTestObject(userOneLeftHand) || this.hitTestObject(userOneRightHand) ){								this.DC.removeChild(this);								this.DC.bugScore -= 1;							}						}					}				}			}		}				public function hover (event: Event) {			//Tweener.removeTweens(this);			if(this.x < 0){				var movement = 1;			}			else if(this.x > 1280) {				movement = 2			}			else if(this.y > 960) {				movement = 4			}			else if(this.x < 0) {				movement = 3			}			else {				movement = randomRange(1, 6)			};						if(movement == 1) {				var newX = this.x + 40;				Tweener.addTween(this, {				 x:newX,				 time:0.4,				 transition:"easeOutCubic"				 });			}			else if(movement == 2) {				newX = this.x - 40;				Tweener.addTween(this, {				 x:newX,				 time:0.4,				 transition:"easeOutCubic"				 });			}			else if(movement == 3) {				var newY = this.y + 40;				Tweener.addTween(this, {				 y: newY,				 time:0.8,				 transition:"easeOutCubic"				 });			}			else if(movement == 4) {				newY = this.y - 40;				Tweener.addTween(this, {				 y:newY,				 time:0.8,				 transition:"easeOutCubic"				 });			}		}			}	}